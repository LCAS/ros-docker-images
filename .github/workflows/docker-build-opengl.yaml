name: Build OpenGL-supported Docker Images

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:

  build:

    name: Build ${{ matrix.push_tag }} OpenGL Desktop Images (${{ github.event_name }} by ${{ github.actor }})
    runs-on: 
      - lcas
      - qemu
    strategy:
        fail-fast: false
        matrix:
          include:
            - base_image: lcas.lincoln.ac.uk/lcas/docker_cuda_desktop:westonrobot-1.1.2
              ros_distro: humble
              push_tag: westonrobot-humble

            - base_image: lcas.lincoln.ac.uk/lcas/docker_cuda_desktop:jammy-cuda11.8-1.1.2
              ros_distro: humble
              push_tag: jammy-cuda11.8-humble

            - base_image: lcas.lincoln.ac.uk/lcas/docker_cuda_desktop:jammy-cuda12.1-1.1.2
              ros_distro: humble
              push_tag: jammy-cuda12.1-humble

            - base_image: lcas.lincoln.ac.uk/lcas/docker_cuda_desktop:jammy-cuda12.2-1.1.2
              ros_distro: humble
              push_tag: jammy-cuda12.2-humble

            - base_image: lcas.lincoln.ac.uk/lcas/docker_cuda_desktop:noble-cuda12.6-1.1.2
              ros_distro: rolling
              push_tag: noble-cuda12.6-rolling
  
    steps:
    - name: Node Js
      uses: actions/setup-node@v4
      with:
        node-version: "^16.13.0 || >=18.0.0"
    - uses: actions/checkout@v3
    - name: What
      run: echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV

    - name: Docker Login LCAS
      # You may pin to the exact commit or the version.
      # uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      uses: docker/login-action@v3
      with:
        # Server address of Docker registry. If not set then will default to Docker Hub
        registry: lcas.lincoln.ac.uk
        # Username used to log against the Docker registry
        username: ${{ secrets.LCAS_REGISTRY_PUSHER }}
        # Password or personal access token used to log against the Docker registry
        password: ${{ secrets.LCAS_REGISTRY_TOKEN }}

    - name: "image name from repo name"
      id: docker_image_name
      run: echo "docker_image=${{ github.repository }}" | tr '[:upper:]' '[:lower:]' |sed 's/[^0-9,a-z,A-Z,=,_,\/]/-/g' >>${GITHUB_OUTPUT}
  
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        flavor: |
          latest=false
        labels: |
          org.opencontainers.image.description=L-CAS ROS2 Docker Image with virtual X11 embedded (flavour: ${{ matrix.push_tag }}, multiarch)
          org.opencontainers.image.authors=L-CAS Team
        # list of Docker images to use as base name for tags
        images: |
          lcas.lincoln.ac.uk/${{ steps.docker_image_name.outputs.docker_image }}
        # generate Docker tags based on the following events/attributes
        tags: |
          type=raw,value=${{ matrix.push_tag }}-staging
          type=raw,enable=${{ github.event_name != 'pull_request' }},value=${{ matrix.push_tag }}
          type=ref,enable=${{ github.event_name != 'pull_request' }},event=branch,prefix=${{ matrix.push_tag }}-
          type=semver,pattern={{version}},prefix=${{ matrix.push_tag }}-
          type=semver,pattern={{major}}.{{minor}},prefix=${{ matrix.push_tag }}-
          type=semver,pattern={{major}},prefix=${{ matrix.push_tag }}-

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker Image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./nvidia.dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        cache-from: type=registry,ref=lcas.lincoln.ac.uk/cache/${{ steps.docker_image_name.outputs.docker_image }}:${{ matrix.push_tag }}
        cache-to: type=registry,ref=lcas.lincoln.ac.uk/cache/${{ steps.docker_image_name.outputs.docker_image }}:${{ matrix.push_tag }},mode=max
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
            BASE_IMAGE=${{ matrix.base_image }}
            BRANCH=${{ env.BRANCH }}
            ROS_DISTRO=${{ matrix.ros_distro }}
